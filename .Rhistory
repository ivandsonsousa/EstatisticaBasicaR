dados = read_excel("exemplo-15.1.xlsx")
x = dados$X
y = dados$Y
n = nrow(dados)
beta_hat = (sum(x*y) - n*mean(x)*mean(y))/(sum(x^2) - n*mean(x)^2)
alpha_hat = mean(y) - beta_hat*mean(x)
alpha_hat
beta_hat
?lm
lm(formula = Y ~ X, dados)
lm(formula = Y ~ X, dados) %>%
summary()
q()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
dados = read_excel("exemplo-15.1.xlsx")
modelo = lm(formula = Z ~ X, dados)
View(modelo)
modelo$coefficients
modelo$residuals
data.frame(X = dados$X, Z = dados$Z, e = modelo$residuals)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados = data.frame(
x = c(10, 13, 5, 7, 20),
y = c(4, 3, 6, 5, 2)
)
modelo = lm(formula = y ~ x, dados)
modelo$coefficients
q()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados = data.frame(
x = c(10, 13, 5, 7, 20),
y = c(4, 3, 6, 5, 2)
)
ggplot(aes(x, y), dados) +
geom_point(size = 2, color = "red") +
stat_smooth(method = "lm")
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(method = "lm")
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm")
?stat_smooth
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 2)
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1)
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.5)
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2)
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2, linetype = "dashed")
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2)
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
theme(text = element_text(size = 16))
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
title = "gráfico de dispersão e reta ajustada" +
subtitle = "modelo linear para aluguel versus idade" +
theme(text = element_text(size = 16))
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para aluguel versus idade"
) +
theme(text = element_text(size = 16))
dados = data.frame(
Pot = c(38, 43, 32, 26, 33, 19, 27, 23, 14, 21),
Temp = c(30, 30, 50, 50, 50, 70, 70, 70, 90, 90)
)
dados = data.frame(
Pot = c(38, 43, 32, 26, 33, 19, 27, 23, 14, 21),
Temp = c(30, 30, 50, 50, 50, 70, 70, 70, 90, 90)
)
ggplot(aes(Temp, Pot), data = dados) +
geom_point(size = 2, col = "black")
ggplot(aes(Temp, Pot), data = dados) +
geom_point(size = 2, col = "black") +
labs(
title = "Gráfico de dispersão para potência versus temperatura"
)
ggplot(aes(Temp, Pot), data = dados) +
geom_point(size = 2, col = "black") +
labs(
title = "Gráfico de dispersão para potência versus temperatura"
) +
theme(text = element_text(size = 16))
ggplot(aes(Temp, Pot), data = dados) +
geom_point(size = 2, col = "black") +
geom_smooth(formula = Pot ~ Temp, size = 1.2, col = "orange")
labs(
title = "Gráfico de dispersão para potência versus temperatura"
) +
theme(text = element_text(size = 16))
ggplot(aes(x = Temp, y = Pot), data = dados) +
geom_point(size = 2, col = "black") +
geom_smooth(formula = y ~ x, size = 1.2, col = "orange", method = "lm")
labs(
title = "Gráfico de dispersão para potência versus temperatura"
) +
theme(text = element_text(size = 16))
ggplot(aes(x = Temp, y = Pot), data = dados) +
geom_point(size = 2, col = "black") +
geom_smooth(formula = y ~ x, size = 1.2, col = "orange", method = "lm") +
labs(
title = "Gráfico de dispersão para potência versus temperatura"
) +
theme(text = element_text(size = 16))
ggplot(aes(x = Temp, y = Pot), data = dados) +
geom_point(size = 2, col = "black") +
geom_smooth(formula = y ~ x, size = 1.2, col = "orange", method = "lm") +
labs(
title = "Gráfico de dispersão para potência versus temperatura",
x = "Temperatura",
y = "Potência"
) +
theme(text = element_text(size = 16))
modelo = lm(formula = Pot ~ Temp, data = dados)
modelo = lm(formula = Pot ~ Temp, data = dados)
modelo$coefficients
ggplot(aes(Y, Z), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
dados = read_excel("exemplo-15.1.xlsx")
ggplot(aes(Y, Z), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
modelo = lm(formula = Y ~ Z, data = dados)
modelo$coefficients
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
q()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados = read_excel("exemplo-15.1.xlsx")
View(dados)
modelo = lm(Y ~ X, dados)
summary(modelo)
?par()
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 20)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 20)
plot(modelo, which = c(1:4), pch = 20)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 20)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 20)
dados = read_excel("exemplo-15.1.xlsx")
tabela = anova(lm(formula = Y ~ Z, data = dados))
tabela
rsq = tabela$`Sum Sq`[1]/sum(tabela$`Sum Sq`)
rsq
summary(lm(formula = Y ~ Z, data = dados))
q()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados = read_excel("exemplo-15.1.xlsx")
modelo = lm(formula = Z ~ X, dados)
modelo$coefficients
summary(modelo)
modelo$terms
modelo$fitted.values
modelo$coefficients
modelo$rank
modelo$assign
confint(modelo
confint(modelo)
summary(modelo)
confint(modelo)
?confint
confint(modelo)
confint(modelo, level = 90)
confint(modelo, level = 0.9)
confint(modelo, level = 0.95)
?predict()
lm(formula = Z ~ X, dados) %>%
confint()
?confint
lm(formula = Z ~ X, dados) %>%
confint(parm = 1)
lm(formula = Z ~ X, dados) %>%
confint(parm = 2)
lm(formula = Z ~ X, dados) %>%
confint(parm = 2, level = 0.90)
lm(formula = Z ~ X, dados) %>%
confint(parm = 1, level = 0.90)
lm(formula = Z ~ X, dados) %>%
anova()
?predict()
lm(formula = Z ~ X, dados) %>%
predict(x = 30)
lm(formula = Z ~ X, dados) %>%
predict(x = 28)
lm(formula = Z ~ X, dados) %>%
predict(X = 28)
lm(formula = Z ~ X, dados) %>%
predict(X = 28, interval = "cinfidence")
lm(formula = Z ~ X, dados) %>%
predict(X = 28, interval = "confidence")
lm(formula = Z ~ X, dados) %>%
predict(newdata = data.frame(x = 28), interval = "confidence")
lm(formula = Z ~ X, dados) %>%
predict(newdata = data.frame(X = 28), interval = "confidence")
data.frame(X = 28)
lm(formula = Y ~ X, dados) %>%
predict(newdata = data.frame(X = 28), interval = "confidence")
lm(formula = Y ~ X, dados) %>%
predict(newdata = data.frame(X = 28), interval = "confidence", level = 0.9)
lm(formula = Y ~ X, dados) %>%
predict(newdata = data.frame(X = 28), interval = "confidence", level = 0.95)
lm(formula = Z ~ X, dados) %>%
predict(newdata = data.frame(X = 28), interval = "predict", level = 0.95)
lm(formula = Y ~ X, dados) %>%
predict(newdata = data.frame(X = 28), interval = "predict", level = 0.95)
anova(lm(formula = Y ~ Z, data = dados))
?percent()
?label_percent()
label_percent(0.05)
scales::label_percent(0.05)
tabela = anova(lm(formula = Y ~ Z, data = dados))
tabela
tabela$`Sum Sq`[1]/sum(tabela$`Sum Sq`)
cat(
"Região de aceitação:",
qt(p = c(0.025, 0.975), df = 20-2)
)
pt(1.65, df = 20-2)
pt(1.65, df = 20-2).
q()
knitr::opts_chunk$set(echo = TRUE)
pt(1.65, df = 20-2)
dados = read_excel("exemplo-15.1.xlsx")
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados = read_excel("exemplo-15.1.xlsx")
modelo = lm(formula = Y ~ X, dados)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 16)
View(dados)
dados = read_excel("exemplo-15.1.xlsx")
modelo = lm(formula = Y ~ X, dados)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 16)
q()
?mfrow
?par
knitr::opts_chunk$set(echo = TRUE)
dados = read_excel("exemplo-15.1.xlsx")
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados = read_excel("exemplo-15.1.xlsx")
modelo = lm(formula = Y ~ X, dados)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 16)
dados = read_excel("exemplo-15.1.xlsx")
modelo = lm(formula = Y ~ X, dados)
par(mfcol = c(2,2))
plot(modelo, which = c(1:4), pch = 16)
dados = read_excel("exemplo-15.1.xlsx")
modelo = lm(formula = Y ~ X, dados)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 16)
dados = read_excel("exemplo-15.1.xlsx")
modelo = lm(formula = Y ~ X, dados)
par(mfcol = c(2,2))
plot(modelo, which = c(1:4), pch = 16)
q()
knitr::opts_chunk$set(echo = TRUE)
dados = data.frame(
preditor = c(11, 20, 14, 22, 12, 25, 15,
14, 19, 21, 18, 22, 16, 21
),
residuo = c(-1, -2, 3, -3, -1, 5, 0,
0, 3, -2, 2, -5, 0, 1
),
ordem = c(9, 6, 13, 1, 7, 14, 8,
3, 12, 4, 11, 2, 10, 5
)
)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados %>%
ggplot(aes(x = preditor, y = residuo)) +
geom_point(size = 2, col = "orange") +
labs(
x = "preditor",
y = "residuos"
)
dados = data.frame(
preditor = c(11, 20, 14, 22, 12, 25, 15,
14, 19, 21, 18, 22, 16, 21
),
residuo = c(-1, -2, 3, -3, -1, 5, 0,
0, 3, -2, 2, -5, 0, 1
),
ordem = c(9, 6, 13, 1, 7, 14, 8,
3, 12, 4, 11, 2, 10, 5
)
)
dados %>%
ggplot(aes(x = preditor, y = residuo)) +
geom_point(size = 2, col = "orange") +
labs(
x = "preditor",
y = "residuos"
)
dados %>%
ggplot(aes(x = preditor, y = residuo)) +
geom_point(size = 2, col = "orange") +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "preditor",
y = "residuos"
)
dados %>%
ggplot(aes(x = preditor, y = residuo)) +
geom_point(size = 2, col = "orange") +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "preditor",
y = "residuos"
) +
theme(text = element_text(size = 16))
dados %>%
ggplot(aes(x = ordem, y = residuo)) +
geom_point(size = 2, col = "orange") +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "preditor",
y = "residuos"
) +
theme(text = element_text(size = 16))
q()
knitr::opts_chunk$set(echo = TRUE)
dados = data.frame(
x = c(119, 155, 174, 190, 196, 233, 272, 253, 276),
y = (112, 152, 172, 183, 192, 228, 163, 239, 263)
dados = data.frame(
x = c(119, 155, 174, 190, 196, 233, 272, 253, 276),
y = c(112, 152, 172, 183, 192, 228, 163, 239, 263)
)
modelo = lm(formula = y ~ x - 1, dados)
modelo
dados = data.frame(
x = c(119, 155, 174, 190, 196, 233, 272, 253, 276),
y = c(112, 152, 172, 183, 192, 228, 263, 239, 263)
)
modelo = lm(formula = y ~ x - 1, dados)
modelo
anova(modelo)
confint(modelo)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados %>%
ggplot(aes(x = x, y = y, dados)) +
geom_point(size = 2, col = "orange") +
geom_smooth(formula = y ~ x, col = "black") +
labs(
title = "Modelo linear com intercepto nulo"
) +
theme(text = element_text(size = 16))
dados %>%
ggplot(aes(x = x, y = y, dados)) +
geom_point(size = 2, col = "orange") +
geom_smooth(formula = y ~ x, col = "black", method = "lm") +
labs(
title = "Modelo linear com intercepto nulo"
) +
theme(text = element_text(size = 16))
dados %>%
ggplot(aes(x = x, y = y, dados)) +
geom_point(size = 2, col = "orange") +
geom_smooth(formula = y ~ x, col = "black") +
labs(
title = "Modelo linear com intercepto nulo"
) +
theme(text = element_text(size = 16))
dados %>%
ggplot(aes(x = x, y = y, dados)) +
geom_point(size = 2, col = "orange") +
geom_smooth(formula = y ~ x - 1, col = "black") +
labs(
title = "Modelo linear com intercepto nulo"
) +
theme(text = element_text(size = 16))
dados %>%
ggplot(aes(x = x, y = y, dados)) +
geom_point(size = 2, col = "orange") +
geom_smooth(formula = y ~ x - 1, col = "black", method = "lm") +
labs(
title = "Modelo linear com intercepto nulo"
) +
theme(text = element_text(size = 16))
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 16)
dados = data.frame(
x = c(119, 155, 174, 190, 196, 233, 272, 253, 276),
y = c(112, 152, 172, 183, 192, 228, 263, 239, 263)
)
modelo = lm(formula = y ~ x - 1, dados)
modelo
anova(modelo)
confint(modelo)
dados %>%
ggplot(aes(x = x, y = y, dados)) +
geom_point(size = 2, col = "orange") +
geom_smooth(formula = y ~ x - 1, col = "black", method = "lm") +
labs(
title = "Modelo linear com intercepto nulo"
) +
theme(text = element_text(size = 16))
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 16)
?lm()
q()
setwd("~/GitHub/EstatisticaBasicaR")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados = read_excel("exemplo-15.1.xlsx")
modelo = lm(Z ~ X, dados)
modelo
modelo %>%
predict(newdata = data.frame(X = 28), interval = "confidence", level = 0.95)
101.5-0.55*28
modelo = lm(y ~ X, dados)
modelo = lm(Y ~ X, dados)
modelo
modelo %>%
predict(newdata = data.frame(X = 28), interval = "confidence", level = 0.95)
modelo %>%
predict(newdata = data.frame(X = 18), interval = "confidence", level = 0.95)
modelo = lm(Y ~ X, dados)
modelo
modelo %>%
predict(newdata = data.frame(X = 18), interval = "confidence", level = 0.95)
modelo = lm(Z ~ X, dados)
modelo
modelo %>%
predict(newdata = data.frame(X = 18), interval = "confidence", level = 0.95)
modelo %>%
predict(newdata = data.frame(X = 30), interval = "confidence", level = 0.95)
modelo %>%
predict(newdata = data.frame(X = 80), interval = "confidence", level = 0.95)
mean(dados$X)
q()
