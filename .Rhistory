knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
setwd("~/GitHub/EstatisticaBasicaR")
read_excel("exemplo-15.1.xlsx")
modelo = lm(formula = Z ~ X, dados)
dados = read_excel("exemplo-15.1.xlsx")
modelo = lm(formula = Z ~ X, dados)
modelo$fitted.values
n = nrow(dados)
e = dados$Z - modelo$fitted.values #residuos
z = e/sd(e) #residuos padronizados
v = 1/n + (dados$X-mean(dados$X)^2)/sum(dados$X-mean(dados$X)^2)
r = e/(sd(e)*sqrt(1-v)) #residuo estudentizado
dados$Z - modelo$fitted.values
n = nrow(dados)
e = dados$Z - as.vector(modelo$fitted.values) #residuos
z = e/sd(e) #residuos padronizados
v = 1/n + (dados$X-mean(dados$X)^2)/sum(dados$X-mean(dados$X)^2)
r = e/(sd(e)*sqrt(1-v)) #residuo estudentizado
e = dados$Z - as.vector(modelo$fitted.values)
dados$Z - as.vector(modelo$fitted.values)
n = nrow(dados)
e = dados$Z - as.vector(modelo$fitted.values) #residuos
z = e/sd(e) #residuos padronizados
v = 1/n + (dados$X-mean(dados$X)^2)/sum(dados$X-mean(dados$X)^2)
r = e/(sd(e)*sqrt(1-v)) #residuo estudentizado
z
r
dados$Z
modelo$fitted.values
e
z
r
par(mfrow = c(1:3))
par(mfrow = c(1,3))
plot(dados$X, e)
par(mfrow = c(1,3))
plot(dados$X, e, dados$X, z)
?plot()
par(mfrow = c(1,3))
plot(dados$X, e)
plot(dados$X, z)
par(mfrow = c(1,3))
plot(dados$X, e)
plot(dados$X, z)
plot(dados$X, r)
dados %>%
gglot(aes(x = X, y = as.vector(modelo$fitted.values)))
dados %>%
ggplot(aes(x = X, y = as.vector(modelo$fitted.values)))
dados %>%
ggplot(aes(x = X, y = as.vector(modelo$fitted.values))) +
labs(
x = "idade",
y = resíduos
)
dados %>%
ggplot(aes(x = X, y = as.vector(modelo$fitted.values))) +
labs(
x = "idade",
y = "resíduos"
)
ggplot(aes(x = dados$X, y = as.vector(modelo$fitted.values))) +
labs(
x = "idade",
y = "resíduos"
)
ei = dados %>%
ggplot(aes(x = X, y = as.vector(modelo$fitted.values))) +
labs(
x = "idade",
y = "resíduos"
)
ei = dados %>%
ggplot(aes(x = X, y = as.vector(modelo$fitted.values))) +
+ geom_point(size = 2)
dados %>%
ggplot(aes(x = X, y = as.vector(modelo$fitted.values))) +
+ geom_point(size = 2)
dados %>%
ggplot(aes(x = X, y = as.vector(modelo$fitted.values))) +
+ geom_point(color = "red", size = 2)
dados %>%
ggplot(aes(x = X, y = as.vector(modelo$fitted.values))) +
+ geom_point(color = "red", size = 2) +
labs(
x = "idade",
y = "resíduos"
)
dados %>%
ggplot(aes(x = X, y = as.vector(modelo$fitted.values))) +
geom_point(color = "red", size = 2) +
labs(
x = "idade",
y = "resíduos"
)
dados %>%
ggplot(aes(x = X, y = e)) +
geom_point(color = "red", size = 2) +
labs(
x = "idade",
y = "resíduos"
)
ei = dados %>%
ggplot(aes(x = X, y = e)) +
geom_point(color = "red", size = 2) +
labs(
x = "idade",
y = "resíduos"
)
zi = dados %>%
ggplot(aes(x = X, y = z)) +
geom_point(color = "g", size = 2) +
labs(
x = "idade",
y = "resíduos"
)
ri = dados %>%
ggplot(aes(x = X, y = r)) +
geom_point(color = "b", size = 2) +
labs(
x = "idade",
y = "resíduos"
)
ei = dados %>%
ggplot(aes(x = X, y = e)) +
geom_point(color = "red", size = 2) +
labs(
x = "idade",
y = "resíduos"
)
zi = dados %>%
ggplot(aes(x = X, y = z)) +
geom_point(color = "g", size = 2) +
labs(
x = "idade",
y = "resíduos"
)
ri = dados %>%
ggplot(aes(x = X, y = r)) +
geom_point(color = "b", size = 2) +
labs(
x = "idade",
y = "resíduos"
)
cowplot::plot_grid(ei, zi, ri)
ei = dados %>%
ggplot(aes(x = X, y = e)) +
geom_point(color = "red", size = 2) +
labs(
x = "idade",
y = "resíduos"
)
zi = dados %>%
ggplot(aes(x = X, y = z)) +
geom_point(color = "green", size = 2) +
labs(
x = "idade",
y = "resíduos"
)
ri = dados %>%
ggplot(aes(x = X, y = r)) +
geom_point(color = "blue", size = 2) +
labs(
x = "idade",
y = "resíduos"
)
cowplot::plot_grid(ei, zi, ri)
ei = dados %>%
ggplot(aes(x = X, y = e)) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 0, color = "black") +
labs(
x = "idade",
y = "resíduos"
)
zi = dados %>%
ggplot(aes(x = X, y = z)) +
geom_point(color = "green", size = 2) +
geom_hline(yintercept = 0, color = "black") +
labs(
x = "idade",
y = "resíduos"
)
ri = dados %>%
ggplot(aes(x = X, y = r)) +
geom_point(color = "blue", size = 2) +
geom_hline(yintercept = 0, color = "black") +
labs(
x = "idade",
y = "resíduos"
)
cowplot::plot_grid(ei, zi, ri)
ei = dados %>%
ggplot(aes(x = X, y = e)) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
zi = dados %>%
ggplot(aes(x = X, y = z)) +
geom_point(color = "green", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
ri = dados %>%
ggplot(aes(x = X, y = r)) +
geom_point(color = "blue", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
cowplot::plot_grid(ei, zi, ri)
?plot_grid
ei = dados %>%
ggplot(aes(x = X, y = e)) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
zi = dados %>%
ggplot(aes(x = X, y = z)) +
geom_point(color = "green", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
ri = dados %>%
ggplot(aes(x = X, y = r)) +
geom_point(color = "blue", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
cowplot::plot_grid(ei, zi, ri, nrow = 1)
ei = dados %>%
ggplot(aes(x = X, y = e)) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
zi = dados %>%
ggplot(aes(x = X, y = z)) +
geom_point(color = "green", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
ri = dados %>%
ggplot(aes(x = X, y = r)) +
geom_point(color = "blue", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
cowplot::plot_grid(ei, zi, ri, ncol = 1)
ei = dados %>%
ggplot(aes(x = X, y = e)) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
zi = dados %>%
ggplot(aes(x = X, y = z)) +
geom_point(color = "green", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
ri = dados %>%
ggplot(aes(x = X, y = r)) +
geom_point(color = "blue", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
cowplot::plot_grid(ei, zi, ri)
ei = dados %>%
ggplot(aes(x = X, y = e)) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
zi = dados %>%
ggplot(aes(x = X, y = z)) +
geom_point(color = "green", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos padronizados"
)
ri = dados %>%
ggplot(aes(x = X, y = r)) +
geom_point(color = "blue", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos estudentizados"
)
cowplot::plot_grid(ei, zi, ri)
sd(e)
View(dados)
View(modelo)
-0.5/sd(e)
-0.5/sd(e)^2
modelo = lm(formula = Y ~ X, dados)
n = nrow(dados)
e = dados$Z - as.vector(modelo$fitted.values) #residuos
z = e/sd(e) #residuos padronizados
v = 1/n + (dados$X-mean(dados$X)^2)/sum(dados$X-mean(dados$X)^2)
r = e/(sd(e)*sqrt(1-v)) #residuo estudentizado
e
n = nrow(dados)
e = dados$Y - as.vector(modelo$fitted.values) #residuos
z = e/sd(e) #residuos padronizados
v = 1/n + (dados$X-mean(dados$X)^2)/sum(dados$X-mean(dados$X)^2)
r = e/(sd(e)*sqrt(1-v)) #residuo estudentizado
e
sd(e)
se = sum(e^2)/(n-2)
se
se = sqrt(sum(e^2)/(n-2))
se
n = nrow(dados)
e = dados$Z - as.vector(modelo$fitted.values) #residuos
se = sqrt(sum(e^2)/(n-2)) #Estimador da variância dos resíduos
z = e/se #residuos padronizados
v = 1/n + (dados$X-mean(dados$X)^2)/sum(dados$X-mean(dados$X)^2)
r = e/(se*sqrt(1-v)) #residuo estudentizado
z
v
r
modelo = lm(formula = Z ~ X, dados)
n = nrow(dados)
e = dados$Z - as.vector(modelo$fitted.values) #residuos
se = sqrt(sum(e^2)/(n-2)) #Estimador da variância dos resíduos
z = e/se #residuos padronizados
v = 1/n + (dados$X-mean(dados$X)^2)/sum(dados$X-mean(dados$X)^2)
r = e/(se*sqrt(1-v)) #residuo estudentizado
e
z
modelo = lm(formula = Y ~ X, dados)
n = nrow(dados)
e = dados$Y - as.vector(modelo$fitted.values) #residuos
se = sqrt(sum(e^2)/(n-2)) #Estimador da variância dos resíduos
z = e/se #residuos padronizados
v = 1/n + (dados$X-mean(dados$X)^2)/sum(dados$X-mean(dados$X)^2)
r = e/(se*sqrt(1-v)) #residuo estudentizado
se
sd(e)
sd(dados$Y)
modelo = lm(formula = Z ~ X, dados)
modelo = lm(formula = Z ~ X, dados)
modelo = lm(formula = Z ~ X, dados)
n = nrow(dados)
e = dados$Z - as.vector(modelo$fitted.values) #residuos
se = sqrt(sum(e^2)/(n-2)) #Estimador da variância dos resíduos
z = e/se #residuos padronizados
v = 1/n + (dados$X-mean(dados$X)^2)/sum(dados$X-mean(dados$X)^2)
r = e/(se*sqrt(1-v)) #residuo estudentizado
z
modelo = lm(formula = Y ~ X, dados)
n = nrow(dados)
e = dados$Y - as.vector(modelo$fitted.values) #residuos
se = sqrt(sum(e^2)/(n-2)) #Estimador da variância dos resíduos
z = e/se #residuos padronizados
v = 1/n + (dados$X-mean(dados$X)^2)/sum(dados$X-mean(dados$X)^2)
r = e/(se*sqrt(1-v)) #residuo estudentizado
z
n = nrow(dados)
e = dados$Z - as.vector(modelo$fitted.values) #residuos
se = sqrt(sum(e^2)/(n-2)) #Estimador da variância dos resíduos
z = e/se #residuos padronizados
v = 1/n + (dados$X-mean(dados$X)^2)/sum(dados$X-mean(dados$X)^2)
r = e/(se*sqrt(1-v)) #residuo estudentizado
ei = dados %>%
ggplot(aes(x = X, y = e)) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
zi = dados %>%
ggplot(aes(x = X, y = z)) +
geom_point(color = "green", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos padronizados"
)
ri = dados %>%
ggplot(aes(x = X, y = r)) +
geom_point(color = "blue", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos estudentizados"
)
cowplot::plot_grid(ei, zi, ri)
modelo = lm(formula = Z ~ X, dados)
n = nrow(dados)
e = dados$Z - as.vector(modelo$fitted.values) #residuos
se = sqrt(sum(e^2)/(n-2)) #Estimador da variância dos resíduos
z = e/se #residuos padronizados
v = 1/n + (dados$X-mean(dados$X)^2)/sum(dados$X-mean(dados$X)^2)
r = e/(se*sqrt(1-v)) #residuo estudentizado
ei = dados %>%
ggplot(aes(x = X, y = e)) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
zi = dados %>%
ggplot(aes(x = X, y = z)) +
geom_point(color = "green", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos padronizados"
)
ri = dados %>%
ggplot(aes(x = X, y = r)) +
geom_point(color = "blue", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos estudentizados"
)
cowplot::plot_grid(ei, zi, ri)
n = nrow(dados)
e = dados$Z - as.vector(modelo$fitted.values) #residuos
se = sqrt(sum(e^2)/(n-2)) #Estimador da variância dos resíduos
z = e/se #residuos padronizados
v = 1/n + (dados$X-mean(dados$X))^2/sum((dados$X-mean(dados$X))^2)
r = e/(se*sqrt(1-v)) #residuo estudentizado
r
modelo = lm(formula = Z ~ X, dados)
n = nrow(dados)
e = dados$Z - as.vector(modelo$fitted.values) #residuos
se = sqrt(sum(e^2)/(n-2)) #Estimador da variância dos resíduos
z = e/se #residuos padronizados
v = 1/n + (dados$X-mean(dados$X))^2/sum((dados$X-mean(dados$X))^2)
r = e/(se*sqrt(1-v)) #residuo estudentizado
ei = dados %>%
ggplot(aes(x = X, y = e)) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos"
)
zi = dados %>%
ggplot(aes(x = X, y = z)) +
geom_point(color = "green", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos padronizados"
)
ri = dados %>%
ggplot(aes(x = X, y = r)) +
geom_point(color = "blue", size = 2) +
geom_hline(yintercept = 0, color = "darkgray") +
labs(
x = "idade",
y = "resíduos estudentizados"
)
cowplot::plot_grid(ei, zi, ri)
n = nrow(dados)
e = dados$Z - as.vector(modelo$fitted.values) #residuos
se = sqrt(sum(e^2)/(n-2)) #Estimador da variância dos resíduos
z = e/se #residuos padronizados
v = 1/n + (dados$X-mean(dados$X))^2/sum((dados$X-mean(dados$X))^2)
r = e/(se*sqrt(1-v)) #residuo estudentizado
modelo = lm(formula = Z ~ X, dados)
n = nrow(dados)
e = dados$Z - as.vector(modelo$fitted.values) #residuos
se = sqrt(sum(e^2)/(n-2)) #Estimador da variância dos resíduos
z = e/se #residuos padronizados
v = 1/n + (dados$X-mean(dados$X))^2/sum((dados$X-mean(dados$X))^2)
r = e/(se*sqrt(1-v)) #residuo estudentizado
z
r
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 16)
q()
