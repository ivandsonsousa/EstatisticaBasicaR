<<<<<<< HEAD
cdc %>%
select(smoke100, gender) %>%
mutate(smoke100 = ifelse(smoke100 == 1, "Sim", "Não")) %>%
ggplot(aes(x = smoke100, fill = gender)) +
geom_bar(position = "dodge", width = 0.5) +
labs(
x = "Fumou pelo menos 100 cigarros?",
y = "Número de indivíduos",
title = "Distribuição dos Fumantes por Gênero"
=======
labs(
title = "qq-plot para o dataset.",
x = "quantis teóricos",
y = "quantis amostrais"
) +
theme(text = element_text(size = 16))
cowplot::plot_grid(box_plot, qq_plot)
dados = as.data.frame(dados)
box_plot = ggplot(data = dados, aes(x = "", y = dados)) +
geom_boxplot(fill = "orange",
outlier.colour = "red",
alpha = 0.5,
width = 0.2,
size = 0.7
) +
stat_boxplot(geom = "errorbar",
width = 0.1,
size = 0.7
) +
labs(
title = "Boxplot para o dataset",
x = "",
y = "values"
) +
coord_flip() +
theme(text = element_text(size = 16))
qq_plot = ggplot(data = dados, aes(sample = dados)) +
geom_qq(col = "red", size = 2) +
geom_qq_line(linetype = "dashed", color = "blue", size = 1) +
labs(
title = "qq-plot para o dataset.",
x = "quantis teóricos",
y = "quantis amostrais"
) +
theme(text = element_text(size = 16))
cowplot::plot_grid(box_plot, qq_plot)
q()
1.96^2/(4*0.05^2)
1.96^2/(4*0.02^2)
q()
q()
plot(cars)
cars
q()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
dados = c(1.04, 1.73, 3.93, 4.44, 6.37, 6.51,
7.61, 7.64, 8.18, 8.48, 8.57, 8.65,
9.71, 9.87, 9.95, 10.01, 10.52, 10.69,
11.72, 12.17, 12.61, 12.98, 13.03, 13.16,
14.11, 14.60, 14.64, 14.75, 16.68, 22.14
>>>>>>> cf58962ff3b95dc3130c0f8981bdd0a9c4b5b451
)
cdc %>%
select(smoke100, gender) %>%
mutate(smoke100 = ifelse(smoke100 == 1, "Sim", "Não")) %>%
ggplot(aes(x = smoke100, fill = gender)) +
geom_bar(position = "dodge", width = 0.5) +
labs(
x = "Fumou pelo menos 100 cigarros?",
y = "Número de indivíduos",
title = "Distribuição dos Fumantes por Gênero"
)
genero %>%
ggplot(aes(x = "", y = n, fill = gender, label = n)) +
geom_bar(stat = "identity", width = 0.3) +
coord_flip() +
geom_label(position = position_stack(vjust = 0.5)) +
theme_void()
cdc %>%
select(smoke100, gender) %>%
mutate(smoke100 = ifelse(smoke100 == 1, "Sim", "Não")) %>%
ggplot(aes(x = smoke100, fill = gender)) +
geom_bar(position = "dodge", width = 0.5) +
coord_flip() +
labs(
x = "Fumou pelo menos 100 cigarros?",
y = "Número de indivíduos",
title = "Distribuição dos Fumantes por Gênero"
)
cdc %>%
select(smoke100, gender) %>%
mutate(smoke100 = ifelse(smoke100 == 1, "Sim", "Não")) %>%
ggplot(aes(x = smoke100, fill = gender)) +
geom_bar(position = "dodge", width = 0.5) +
coord_flip() +
labs(
x = "Fumou pelo menos 100 cigarros?",
y = "Número de indivíduos",
title = "Distribuição dos Fumantes por Gênero"
)
genero %>%
ggplot(aes(x = "", y = n, fill = gender, label = n)) +
geom_bar(stat = "identity", width = 0.3) +
coord_flip() +
geom_label(position = position_stack(vjust = 0.5)) +
theme_void()
cdc %>%
select(smoke100, gender) %>%
mutate(smoke100 = ifelse(smoke100 == 1, "Sim", "Não")) %>%
ggplot(aes(x = smoke100, fill = gender)) +
geom_bar(position = "dodge", width = 0.5) +
coord_flip() +
labs(
x = "Fumou pelo menos 100 cigarros?",
y = "Número de indivíduos",
title = "Distribuição dos Fumantes por Gênero"
) +
theme(plot.background = element_blank())
cdc %>%
select(smoke100, gender) %>%
mutate(smoke100 = ifelse(smoke100 == 1, "Sim", "Não")) %>%
ggplot(aes(x = smoke100, fill = gender)) +
geom_bar(position = "dodge", width = 0.5) +
coord_flip() +
labs(
x = "Fumou pelo menos 100 cigarros?",
y = "Número de indivíduos",
title = "Distribuição dos Fumantes por Gênero"
) +
theme(plot.background = element_blank())
cdc %>%
select(smoke100, gender) %>%
mutate(smoke100 = ifelse(smoke100 == 1, "Sim", "Não")) %>%
ggplot(aes(x = smoke100, fill = gender)) +
geom_bar(position = "dodge", width = 0.5) +
coord_flip() +
labs(
x = "Fumou pelo menos 100 cigarros?",
y = "Número de indivíduos",
title = "Distribuição dos Fumantes por Gênero"
)
cdc %>%
select(smoke100, gender) %>%
mutate(smoke100 = ifelse(smoke100 == 1, "Sim", "Não")) %>%
ggplot(aes(x = smoke100, fill = gender)) +
geom_bar(position = "dodge", width = 0.5) +
coord_flip() +
labs(
x = "Fumou pelo menos 100 cigarros?",
y = "Número de indivíduos",
title = "Distribuição dos Fumantes por Gênero"
) +
theme(
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()
)
cdc %>%
select(smoke100, gender) %>%
mutate(smoke100 = ifelse(smoke100 == 1, "Sim", "Não")) %>%
ggplot(aes(x = smoke100, fill = gender)) +
geom_bar(position = "dodge", width = 0.5) +
coord_flip() +
labs(
x = "Fumou pelo menos 100 cigarros?",
y = "Número de indivíduos",
title = "Distribuição dos Fumantes por Gênero"
)
cdc %>%
select(gender) %>%
table() %>%
prop.table()
cdc %>%
select(genhlth) %>%
table() %>%
prop.table()
cdc %>%
select(gender, smoke100) %>%
table()
cdc %>%
select(gender, smoke100) %>%
table() %>%
prop.table(margin = 2)
cdc %>%
select(gender, smoke100) %>%
table() %>%
prop.table()
cdc %>%
select(gender, smoke100) %>%
table() %>%
prop.table(margin = 1)
cdc %>%
select(gender, smoke100) %>%
table() %>%
margin.table(margin = 1)
margin.table(table(select(cdc, gender, smoke100)), 1)
cdc %>%
select(gender, smoke100) %>%
table() %>%
margin.table(margin = 2)
cdc %>%
select(gender, smoke100) %>%
table() %>%
margin.table(margin = 1)
qplot(x = weight, y = height, data = cdc, geom = 'point')
cor(cdc$weight, cdc$height)
qplot(x = genero, fill = fumar100, data = cdc)
qplot(x = gender, fill = smoke100, data = cdc)
ggplot(cdc, aes(gender, fill = smoke100)) +
geom_bar(position = "fill")
qplot(x = gender, fill = smoke100, data = cdc)
ggplot(cdc, aes(x = gender, fill = smoke100)) +
geom_bar(position = "fill")
qplot(x = gender, fill = smoke100, data = cdc)
ggplot(cdc, aes(x = gender, fill = smoke100)) +
geom_bar()
qplot(x = genero, y = altura, data = cdc, geom = "boxplot")
qplot(x = gender, y = height, data = cdc, geom = "boxplot")
cdc %>%
ggplot(aes(x = gender, y = height)) +
geom_boxplot()
qplot(x = gender, y = height, data = cdc, geom = "boxplot")
cdc = mutate(cdc, imc = (weight/height^2)*703)
View(cdc)
cdc %>%
ggplot(aes(x = genhlth, y = imc)) +
geom_boxplot()
qplot(x = saude, y = imc, data = cdc, geom = "boxplot")
qplot(x = genhlth, y = imc, data = cdc, geom = "boxplot")
cdc %>%
ggplot(aes(x = gender, y = imc)) +
geom_boxplot()
men = filter(cdc, gender == "m")
View(men)
head(men)
?filter
View(cdc)
cdc %>%
select(genhlth, gender, weight, age) %>%
men = filter(gender == "m")
?subset
cdc %>%
men2 = subset(gender == "m", select = c(gender, genhlth, age))
men2 = cdc %>%
subset(gender == "m", select = c(gender, genhlth, age))
View(men2)
homens_e_30mais = filter(cdc, gender == "m" & age > 30)
View(homens_e_30mais)
homens_ou_30mais = filter(cdc, gender == "m" | age > 30)
View(homens_ou_30mais)
menos23_fumante = filter(cdc, age < 23 & smoke100 == 1)
View(menos23_fumante)
names(cdc)
cdc %>%
ggplot(aes(x = wtdesire, y = weight)) +
geom_point()
qplot(x = pdesejado, y = peso, data = cdc, geom = "point")
cdc %>%
ggplot(aes(x = wtdesire, y = weight)) +
geom_point()
cor(cdc$pdesejado, cdc$peso)
cdc %>%
ggplot(aes(x = wtdesire, y = weight)) +
geom_point()
cor(cdc$wtdesire, cdc$weight)
cdc %>%
pdif = wtdesire - weight
pdif = cdc$pdesejado - cdc$peso
typeof(pdif)
typeof(cdc$peso)
typeof(cdc$pdesejado)
typeof(pdif)
typeof(cdc$weight)
typeof(cdc$wtdesire)
cdc %>%
mutate(pdif = wtdesire - weight) %>%
summary(pdif)
cdc %>%
mutate(pdif = wtdesire - weight) %>%
cdc %>%
mutate(pdif = wtdesire - weight)
cdc %>%
mutate(pdif = wtdesire - weight) %>%
select(pdif) %>%
summary()
cdc %>%
ggplot(aes(x = pdif)) +
geom_histogram(aes(y = ..density..),
fill = "blue", binwidth = 10, alpha = 0.4) +
labs(
x = "P_dif",
y = "Densidade",
title = "Histograma da diferença entre o peso desejado e o atual"
)
View(cdc)
cdc = cdc %>%
mutate(pdif = wtdesire - weight) %>%
select(pdif) %>%
summary()
cdc = cdc %>%
mutate(pdif = wtdesire - weight) %>%
select(pdif) %>%
summary()
cdc %>%
mutate(pdif = wtdesire - weight) %>%
select(pdif) %>%
summary()
cdc %>%
mutate(pdif = wtdesire - weight) %>%
select(pdif) %>%
summary()
source("http://www.openintro.org/stat/data/cdc.R")
cdc %>%
mutate(pdif = wtdesire - weight) %>%
select(pdif) %>%
summary()
cdc = mutate(cdc, pdif = wtdesire - weight)%>%
select(pdif) %>%
summary()
source("http://www.openintro.org/stat/data/cdc.R")
cdc %>%
mutate(pdif = wtdesire - weight) %>%
select(pdif) %>%
summary()
View(cdc)
cdc = mutate(cdc, pdif = wtdesire - weight)
cdc = mutate(cdc, pdif = wtdesire - weight) %>%
select(pdif) %>%
summary()
cdc = mutate(cdc, pdif = wtdesire - weight) %>%
select(pdif) %>%
summary()
source("http://www.openintro.org/stat/data/cdc.R")
cdc = mutate(cdc, pdif = wtdesire - weight)
View(cdc)
cdc %>%
select(pdif) %>%
summary()
cdc %>%
ggplot(aes(x = pdif)) +
geom_histogram(aes(y = ..density..),
fill = "blue", binwidth = 10, alpha = 0.4) +
labs(
x = "P_dif",
y = "Densidade",
title = "Histograma da diferença entre o peso desejado e o atual"
)
cdc %>%
ggplot(aes(x = pdif)) +
geom_histogram(aes(y = ..density..),
fill = "blue", binwidth = 10, alpha = 0.4, color = "black") +
labs(
x = "P_dif",
y = "Densidade",
title = "Histograma da diferença entre o peso desejado e o atual"
)
cdc %>%
ggplot(aes(x = pdif)) +
geom_histogram(aes(y = ..density..),
fill = "blue", binwidth = 20, alpha = 0.4, color = "black") +
labs(
x = "P_dif",
y = "Densidade",
title = "Histograma da diferença entre o peso desejado e o atual"
)
cdc %>%
ggplot(aes(x = pdif)) +
geom_histogram(aes(y = ..density..),
fill = "blue", binwidth = 10, alpha = 0.4, color = "black") +
labs(
x = "P_dif",
y = "Densidade",
title = "Histograma da diferença entre o peso desejado e o atual"
)
-14.59*0.453592
cdc %>%
group_by(gender) %>%
summarize(media_pdif = mean(pdif), sd_pdif = sd(pdif), mediana_pdif = median(pdif), dq_pdif = IQR(pdif))
cdc %>%
ggplot(aes(x = gender, y = pdif)) +
geom_boxplot()
nrow(filter(cdc, abs(weight - mean(weight)) < sd(weight)))/nrow(cdc)
nrow(filter(cdc, abs(weight - mean(weight)) < 2*sd(weight)))/nrow(cdc)
cdc %>%
ggplot(aes(x = weight)) +
geom_histogram(aes(y = ..density..),
fill = "blue",
alpha = 0.4,
col = "black") +
labs(x = "Peso",
y = "Density",
title = "Histograma para os pesos dos participantes do estudo")
q()
q()
qt(0.45, 9)
qt(0.45, 9, lower.tail = F)
n = 10
mu_0 = 50
pt(sqrt(n)*(x_bar - mu_0)/s, n-1)
n = 10
qt(0.45, n - 1, lower.tail = F)
# b)
mu_0 = 50
x_bar = 48
s = sqrt(120)
pt(sqrt(n)*(x_bar - mu_0)/s, n-1)
pt(2*sqrt(n)/s)
pt(2*sqrt(n)/s, n-1)
pt(2*sqrt(n)/s, n-1)
2*sqrt(n)/s
pt(2*sqrt(n)/s, n-1) - pt(-2*sqrt(n)/s, n-1)
n = 16
n = 16
x_bar = 85
mu_0 = 100
s = 12
pt(sqrt(n)*(x_bar - mu_0)/s, n-1)
sqrt(n)*(x_bar - mu_0)/s
q_t = qt(c(0.975, n-1))
int_conf = x_bar + c(-1, 1)*q_t*s/sqrt(n)
q_t = qt(c(0.975, n-1))
int_conf = x_bar + c(-1, 1)*q_t*s/sqrt(n)
q_t = qt(c(0.975, n-1))
q_t = qt(c(0.975, n-1))
q_t = qt(c0.975, n-1)
q_t = qt(0.975, n-1)
int_conf = x_bar + c(-1, 1)*q_t*s/sqrt(n)
x = c(1.230, 582, 576, 2.093, 2.621, 1.045, 1.439, 717, 1.838, 1.359)
n = length(x)
n = length(x)
mu_0 = 1229
x_bar = mean(x)
s = sd(x)
x_bar = mean(x)
pt(sqrt(n)*(x_bar - mu_0)/s, lower.tail = F)
pt(sqrt(n)*(x_bar - mu_0)/s, n-1, lower.tail = F)
s = sd(x)
x = c(1.230, 582, 576, 2.093, 2.621, 1.045, 1.439, 717, 1.838, 1.359)
x = c(1230, 582, 576, 2093, 2621, 1045, 1439, 717, 1838, 1359)
n = length(x)
mu_0 = 1229
x_bar = mean(x)
s = sd(x)
pt(sqrt(n)*(x_bar - mu_0)/s, n-1, lower.tail = F)
s = sd(x)
x = c(41, 44, 35, 42, 34, 22, 42, 42, 38, 62, 29, 63, 38, 45, 48, 40)
x_bar = mean(x)
x = c(41, 44, 35, 42, 34, 22, 42, 42, 38, 62, 29, 63, 38, 45, 48, 40)
x_bar = mean(x)
n = length(x)
x_bar = mean(x)
q_t = qt(0.975, n-1)
q_t = qt(0.975, n-1) #quantil para cálculo do IC
x = c(41, 44, 35, 42, 34, 22, 42, 42, 38, 62, 29, 63, 38, 45, 48, 40)
n = length(x)
x_bar = mean(x)
q_t = qt(0.975, n-1) #quantil que acumula 95% para cálculo do IC
x = c(41, 44, 35, 42, 34, 22, 42, 42, 38, 62, 29, 63, 38, 45, 48, 40)
n = length(x)
x_bar = mean(x)
s = sd(x)
q_t = qt(0.975, n-1) #quantil que acumula 95% para cálculo do IC
int_conf = x_bar + c(-1, 1)*q_t*s/sqrt(n) #Intervalo de confiança de 95%
x = c(30.5, 34.1, 27.9, 35, 26.9, 30.2, 28.3, 31.7, 25.8)
x = c(30.5, 34.1, 27.9, 35, 26.9, 30.2, 28.3, 31.7, 25.8)
sigma = 3.1
n = length(x)
x_bar = mean(x)
x = c(30.5, 34.1, 27.9, 35, 26.9, 30.2, 28.3, 31.7, 25.8)
sigma = 3.1
n = length(x)
x_bar = mean(x)
mu = 30
mu = 30
2*min(c(pnorm(x_bar, mu, sigma), pnorm(x_bar, mu, sigma, lower.tail = F)))
pnorm(x_bar, mu, sigma, lower.tail = F)
qnorm(0.975)
pnorm(x_bar, mu, sigma, lower.tail = F)
alor de p resultou ser maior que o nível de significância (5%),
# não podemos rejeitar a hipótese nula de que a média da população não é
# superior a 30.
# Logo, como o valor de p resultou ser maior que o nível de significância (5%),
# não podemos rejeitar a hipótese nula de que a média da população não é
# superior a 30.
mu_0 = 30
s = std(x)
t = sqrt(n)*(x_bar - mu_0)/s
t = sqrt(n)*(x_bar - mu_0)/s
pt(t, n - 1, lower.tail = F)
sqrt(3.1)
pnorm(x_bar, mu_0, sigma/sqrt(n), lower.tail = F)
pnorm(x_bar, mu_0, sigma/sqrt(n), lower.tail = F)
pnorm(x_bar, mu_0, sigma/sqrt(n), lower.tail = F)
t = sqrt(n)*(x_bar - mu_0)/s
pnorm(x_bar, mu_0, sigma/sqrt(n), lower.tail = F)
pt(t, n - 1, lower.tail = F)
sigma/sqrt(n)
qnorm(0.05, x_bar, sigma/sqrt(n), lower.tail = F)
x_bar = mean(x)
z = qnorm(0.05, x_bar, sigma/sqrt(n), lower.tail = F) #quantil crítico para
x_bar_c = qnorm(0.05, x_bar, sigma/sqrt(n), lower.tail = F) #quantil crítico para
q_c = qnorm(0.05, x_bar, sigma/sqrt(n), lower.tail = F) #quantil crítico para
pnorm(q_c, 33, sigma)
pnorm(q_c, 33, sigma/sqrt(n))
q_c = qnorm(0.05, x_bar, sigma/sqrt(n), lower.tail = F) #quantil crítico para
pnorm(q_c, 33, sigma/sqrt(n)) #beta
q_c = qnorm(0.05, mu_0, sigma/sqrt(n), lower.tail = F) #quantil crítico para
pnorm(q_c, 33, sigma/sqrt(n)) #beta
q_c = qnorm(0.05, mu_0, sigma/sqrt(n), lower.tail = F) #quantil crítico para
pnorm(q_c, 33, sigma/sqrt(n)) #beta
q()
q()
q()
updater()
library(installr)
updater()
R.Version()
r --version
R --version
R.version()
version
q()
q()
knitr::opts_chunk$set(echo = TRUE)
q = qunif(c(0.25, 0.50, 0.75), min = 0, max = 1)
ks.test(x, p = "punif")
dados = c(0.145, 0.430, 0.882, 0.191, 0.224, 0.173, 0.561, 0.060, 0.810, 0.785,
0.299, 0.932, 0.125, 0.661, 0.960, 0.413, 0.853, 0.968, 0.603, 0.384,
0.516, 0.356, 0.517, 0.321, 0.092, 0.372, 0.527, 0.421, 0.229, 0.064,
0.901, 0.178, 0.519, 0.504, 0.179, 0.887, 0.239, 0.041, 0.452, 0.990,
0.433, 0.248, 0.251, 0.206, 0.974, 0.275, 0.124, 0.775, 0.874, 0.983
)
q = qunif(c(0.25, 0.50, 0.75), min = 0, max = 1)
x = dados %>%
cut(c(0, q, 1)) %>%
table() %>%
as.vector()
ks.test(dados, p = "punif")
ks.test(dados, y = "punif")
?ks.test()
ks.test(dados, y = "punif", alternative = "greater")
ks.test(dados, y = "punif", alternative = "less")
ks.test(dados, y = "punif", alternative = "greater")
ks.test(dados, y = "punif")
?pexp()
library(dplyr)
library(ggplot2)
library(readxl)
library(kableExtra) #Para gerar tabelas com um layout agradável
dados = read_excel(
"Dados_EB_originais.xlsx",
sheet = "CD-Notas",
col_names = F
)
dados = unlist(dados)
dados = as.vector(dados)
dados
q()
q()
<<<<<<< HEAD
setwd("~/GitHub/EstatisticaBasicaR")
?lm()
?aov()
=======
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados = read_excel("exemplo-15.1.xlsx")
View(dados)
modelo = lm(Y ~ X, dados)
summary(modelo)
?par()
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 20)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 20)
plot(modelo, which = c(1:4), pch = 20)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 20)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 20)
dados = read_excel("exemplo-15.1.xlsx")
tabela = anova(lm(formula = Y ~ Z, data = dados))
tabela
rsq = tabela$`Sum Sq`[1]/sum(tabela$`Sum Sq`)
rsq
summary(lm(formula = Y ~ Z, data = dados))
q()
setwd("~/GitHub/EstatisticaBasicaR")
knitr::opts_chunk$set(echo = TRUE)
dados = read_excel("exemplo-15.1.xlsx")
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados = read_excel("exemplo-15.1.xlsx")
tabela = anova(lm(formula = Y ~ Z + X, data = dados))
tabela
lm(formula = Y ~ Z + X, data = dados)
tabela = anova(lm(formula = Y ~ Z, data = dados))
tabela
tabela = anova(lm(formula = Y ~ Z + X, data = dados))
tabela
tabela = anova(lm(formula = Y ~ Z, data = dados))
tabela
View(tabela)
View(dados)
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x + x*x, method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x*x, method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x^2, method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
modelo = lm(formula = Y ~ Z*Z + Z, data = dados)
modelo$coefficients
modelo = lm(formula = Y ~ Z, data = dados)
modelo$coefficients
?formula
modelo = lm(formula = Y ~ Z^2, data = dados)
modelo$coefficients
modelo = lm(formula = Y ~ Z + I(Z^2), data = dados)
modelo$coefficients
modelo = lm(formula = Y ~ Z + X, data = dados)
modelo$coefficients
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x + I(x^2), method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x + I(x^2), method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x + I(sqrt(x)), method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ I(sqrt(x)), method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ I(log10(x)), method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ I(sin(x)), method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ I(exp(x)), method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
modelo = lm(formula = Y ~ I(exp(Z)), data = dados)
modelo$coefficients
modelo = lm(formula = Y ~ I(exp(Z)) -1, data = dados)
modelo$coefficients
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ -1 + I(exp(x)), method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ -1 + I(sin(x)), method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
?par()
par(mfrow = c(2,2))
plot()
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 2)
?plot
?plot
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 20)
?pch
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 23)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 16)
View(tabela)
summary(modelo)
modelo = lm(formula = Y ~ Z, data = dados)
modelo$coefficients
dados = read_excel("exemplo-15.1.xlsx")
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
modelo = lm(formula = Y ~ Z, data = dados)
modelo$coefficients
summary(modelo)
modelo$rank
modelo
summary(modelo)
qt(0.05, 18)
qt(0.975, 18)
5.02^2
5.09^2
>>>>>>> cf58962ff3b95dc3130c0f8981bdd0a9c4b5b451
q()
