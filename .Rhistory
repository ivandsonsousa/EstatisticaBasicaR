labs(
title = "qq-plot para o dataset.",
x = "quantis teóricos",
y = "quantis amostrais"
) +
theme(text = element_text(size = 16))
cowplot::plot_grid(box_plot, qq_plot)
dados = as.data.frame(dados)
box_plot = ggplot(data = dados, aes(x = "", y = dados)) +
geom_boxplot(fill = "orange",
outlier.colour = "red",
alpha = 0.5,
width = 0.2,
size = 0.5
) +
stat_boxplot(geom = "errorbar",
width = 0.1) +
labs(
title = "Boxplot para o dataset",
x = "",
y = "values"
) +
coord_flip() +
theme(text = element_text(size = 16))
qq_plot = ggplot(data = dados, aes(sample = dados)) +
geom_qq(col = "red", size = 2) +
geom_qq_line(linetype = "dashed", color = "blue", size = 1) +
labs(
title = "qq-plot para o dataset.",
x = "quantis teóricos",
y = "quantis amostrais"
) +
theme(text = element_text(size = 16))
cowplot::plot_grid(box_plot, qq_plot)
dados = as.data.frame(dados)
box_plot = ggplot(data = dados, aes(x = "", y = dados)) +
geom_boxplot(fill = "orange",
outlier.colour = "red",
alpha = 0.5,
width = 0.2,
size = 0.8
) +
stat_boxplot(geom = "errorbar",
width = 0.1) +
labs(
title = "Boxplot para o dataset",
x = "",
y = "values"
) +
coord_flip() +
theme(text = element_text(size = 16))
qq_plot = ggplot(data = dados, aes(sample = dados)) +
geom_qq(col = "red", size = 2) +
geom_qq_line(linetype = "dashed", color = "blue", size = 1) +
labs(
title = "qq-plot para o dataset.",
x = "quantis teóricos",
y = "quantis amostrais"
) +
theme(text = element_text(size = 16))
cowplot::plot_grid(box_plot, qq_plot)
dados = as.data.frame(dados)
box_plot = ggplot(data = dados, aes(x = "", y = dados)) +
geom_boxplot(fill = "orange",
outlier.colour = "red",
alpha = 0.5,
width = 0.2,
size = 0.7
) +
stat_boxplot(geom = "errorbar",
width = 0.1) +
labs(
title = "Boxplot para o dataset",
x = "",
y = "values"
) +
coord_flip() +
theme(text = element_text(size = 16))
qq_plot = ggplot(data = dados, aes(sample = dados)) +
geom_qq(col = "red", size = 2) +
geom_qq_line(linetype = "dashed", color = "blue", size = 1) +
labs(
title = "qq-plot para o dataset.",
x = "quantis teóricos",
y = "quantis amostrais"
) +
theme(text = element_text(size = 16))
cowplot::plot_grid(box_plot, qq_plot)
dados = as.data.frame(dados)
box_plot = ggplot(data = dados, aes(x = "", y = dados)) +
geom_boxplot(fill = "orange",
outlier.colour = "red",
alpha = 0.5,
width = 0.2,
size = 0.7
) +
stat_boxplot(geom = "errorbar",
width = 0.1,
size = 0.7
) +
labs(
title = "Boxplot para o dataset",
x = "",
y = "values"
) +
coord_flip() +
theme(text = element_text(size = 16))
qq_plot = ggplot(data = dados, aes(sample = dados)) +
geom_qq(col = "red", size = 2) +
geom_qq_line(linetype = "dashed", color = "blue", size = 1) +
labs(
title = "qq-plot para o dataset.",
x = "quantis teóricos",
y = "quantis amostrais"
) +
theme(text = element_text(size = 16))
cowplot::plot_grid(box_plot, qq_plot)
q()
1.96^2/(4*0.05^2)
1.96^2/(4*0.02^2)
q()
q()
plot(cars)
cars
q()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
dados = c(1.04, 1.73, 3.93, 4.44, 6.37, 6.51,
7.61, 7.64, 8.18, 8.48, 8.57, 8.65,
9.71, 9.87, 9.95, 10.01, 10.52, 10.69,
11.72, 12.17, 12.61, 12.98, 13.03, 13.16,
14.11, 14.60, 14.64, 14.75, 16.68, 22.14
)
q = qnorm(c(0.25, 0.50, 0.75), 10, 5)
x = dados %>%
cut(c(-Inf, q, Inf)) %>%
table() %>%
as.vector()
q()
q()
q()
knitr::opts_chunk$set(echo = TRUE)
q = qnorm(c(0.25, 0.50, 0.75), 30, 10)
x = dados %>%
cut(c(-Inf, q, Inf)) %>%
table() %>%
as.vector()
library(dplyr)
library(ggplot2)
library(readxl)
q = qnorm(c(0.25, 0.50, 0.75), 30, 10)
x = dados %>%
cut(c(-Inf, q, Inf)) %>%
table() %>%
as.vector()
dados = c(15.9, 16.9, 18.3, 18.5, 19.0,
19.5, 21.8, 23.0, 23.8, 24.5,
26.1, 26.9, 32.3, 35.0, 36.1,
36.5, 37.2, 38.5, 40.9, 44.2
)
q = qnorm(c(0.25, 0.50, 0.75), 30, 10)
x = dados %>%
cut(c(-Inf, q, Inf)) %>%
table() %>%
as.vector()
tab = matrix(
c(15, 8, 20, 23, 30, 18, 20, 34, 15, 17),
byrow = F,
nrow = 2,
dimnames = list(c("humanas", "biologicas"), c(LETTERS[1:5]))
)
View(tab)
View(tab)
dados = data.frame(
pub_obs = c(15, 22, 18, 3),
part_obs = c(6, 10, 20, 6)
)
row.names(dados) = c("(0; 2,5]", "(2,5; 5]", "(5; 7,5]", "(7,5; 10]")
dados = mutate(
dados,
total = pub_obs + part_obs,
pub_esp = (total/sum(total))*sum(pub_obs),
part_esp = (total/sum(total))*sum(part_obs)
)
View(dados)
View(dados)
q()
q(
q()
q()
q()
q()
q()
q()
q()
0:4
?dbinom
q()
q()
q()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
dados = read_excel("exemplo-15.1.xlsx")
x = dados$X
y = dados$Y
n = nrow(dados)
beta_hat = (sum(x*y) - n*mean(x)*mean(y))/(sum(x^2) - n*mean(x)^2)
alpha_hat = mean(y) - beta_hat*mean(x)
alpha_hat
beta_hat
?lm
lm(formula = Y ~ X, dados)
lm(formula = Y ~ X, dados) %>%
summary()
q()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
dados = read_excel("exemplo-15.1.xlsx")
modelo = lm(formula = Z ~ X, dados)
View(modelo)
modelo$coefficients
modelo$residuals
data.frame(X = dados$X, Z = dados$Z, e = modelo$residuals)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados = data.frame(
x = c(10, 13, 5, 7, 20),
y = c(4, 3, 6, 5, 2)
)
modelo = lm(formula = y ~ x, dados)
modelo$coefficients
q()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados = data.frame(
x = c(10, 13, 5, 7, 20),
y = c(4, 3, 6, 5, 2)
)
ggplot(aes(x, y), dados) +
geom_point(size = 2, color = "red") +
stat_smooth(method = "lm")
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(method = "lm")
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm")
?stat_smooth
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 2)
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1)
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.5)
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2)
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2, linetype = "dashed")
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2)
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
theme(text = element_text(size = 16))
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
title = "gráfico de dispersão e reta ajustada" +
subtitle = "modelo linear para aluguel versus idade" +
theme(text = element_text(size = 16))
ggplot(aes(x, y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para aluguel versus idade"
) +
theme(text = element_text(size = 16))
dados = data.frame(
Pot = c(38, 43, 32, 26, 33, 19, 27, 23, 14, 21),
Temp = c(30, 30, 50, 50, 50, 70, 70, 70, 90, 90)
)
dados = data.frame(
Pot = c(38, 43, 32, 26, 33, 19, 27, 23, 14, 21),
Temp = c(30, 30, 50, 50, 50, 70, 70, 70, 90, 90)
)
ggplot(aes(Temp, Pot), data = dados) +
geom_point(size = 2, col = "black")
ggplot(aes(Temp, Pot), data = dados) +
geom_point(size = 2, col = "black") +
labs(
title = "Gráfico de dispersão para potência versus temperatura"
)
ggplot(aes(Temp, Pot), data = dados) +
geom_point(size = 2, col = "black") +
labs(
title = "Gráfico de dispersão para potência versus temperatura"
) +
theme(text = element_text(size = 16))
ggplot(aes(Temp, Pot), data = dados) +
geom_point(size = 2, col = "black") +
geom_smooth(formula = Pot ~ Temp, size = 1.2, col = "orange")
labs(
title = "Gráfico de dispersão para potência versus temperatura"
) +
theme(text = element_text(size = 16))
ggplot(aes(x = Temp, y = Pot), data = dados) +
geom_point(size = 2, col = "black") +
geom_smooth(formula = y ~ x, size = 1.2, col = "orange", method = "lm")
labs(
title = "Gráfico de dispersão para potência versus temperatura"
) +
theme(text = element_text(size = 16))
ggplot(aes(x = Temp, y = Pot), data = dados) +
geom_point(size = 2, col = "black") +
geom_smooth(formula = y ~ x, size = 1.2, col = "orange", method = "lm") +
labs(
title = "Gráfico de dispersão para potência versus temperatura"
) +
theme(text = element_text(size = 16))
ggplot(aes(x = Temp, y = Pot), data = dados) +
geom_point(size = 2, col = "black") +
geom_smooth(formula = y ~ x, size = 1.2, col = "orange", method = "lm") +
labs(
title = "Gráfico de dispersão para potência versus temperatura",
x = "Temperatura",
y = "Potência"
) +
theme(text = element_text(size = 16))
modelo = lm(formula = Pot ~ Temp, data = dados)
modelo = lm(formula = Pot ~ Temp, data = dados)
modelo$coefficients
ggplot(aes(Y, Z), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
dados = read_excel("exemplo-15.1.xlsx")
ggplot(aes(Y, Z), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
modelo = lm(formula = Y ~ Z, data = dados)
modelo$coefficients
ggplot(aes(Z, Y), data = dados) +
geom_point(size = 2, color = "red") +
stat_smooth(formula = y ~ x, method = "lm", size = 1.2) +
labs(
title = "gráfico de dispersão e reta ajustada",
subtitle = "modelo linear para tempo de reação versus acuidade visual"
) +
theme(text = element_text(size = 16))
q()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados = read_excel("exemplo-15.1.xlsx")
View(dados)
modelo = lm(Y ~ X, dados)
summary(modelo)
?par()
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 20)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 20)
plot(modelo, which = c(1:4), pch = 20)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 20)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 20)
dados = read_excel("exemplo-15.1.xlsx")
tabela = anova(lm(formula = Y ~ Z, data = dados))
tabela
rsq = tabela$`Sum Sq`[1]/sum(tabela$`Sum Sq`)
rsq
summary(lm(formula = Y ~ Z, data = dados))
q()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados = read_excel("exemplo-15.1.xlsx")
modelo = lm(formula = Z ~ X, dados)
modelo$coefficients
summary(modelo)
modelo$terms
modelo$fitted.values
modelo$coefficients
modelo$rank
modelo$assign
confint(modelo
confint(modelo)
summary(modelo)
confint(modelo)
?confint
confint(modelo)
confint(modelo, level = 90)
confint(modelo, level = 0.9)
confint(modelo, level = 0.95)
?predict()
lm(formula = Z ~ X, dados) %>%
confint()
?confint
lm(formula = Z ~ X, dados) %>%
confint(parm = 1)
lm(formula = Z ~ X, dados) %>%
confint(parm = 2)
lm(formula = Z ~ X, dados) %>%
confint(parm = 2, level = 0.90)
lm(formula = Z ~ X, dados) %>%
confint(parm = 1, level = 0.90)
lm(formula = Z ~ X, dados) %>%
anova()
?predict()
lm(formula = Z ~ X, dados) %>%
predict(x = 30)
lm(formula = Z ~ X, dados) %>%
predict(x = 28)
lm(formula = Z ~ X, dados) %>%
predict(X = 28)
lm(formula = Z ~ X, dados) %>%
predict(X = 28, interval = "cinfidence")
lm(formula = Z ~ X, dados) %>%
predict(X = 28, interval = "confidence")
lm(formula = Z ~ X, dados) %>%
predict(newdata = data.frame(x = 28), interval = "confidence")
lm(formula = Z ~ X, dados) %>%
predict(newdata = data.frame(X = 28), interval = "confidence")
data.frame(X = 28)
lm(formula = Y ~ X, dados) %>%
predict(newdata = data.frame(X = 28), interval = "confidence")
lm(formula = Y ~ X, dados) %>%
predict(newdata = data.frame(X = 28), interval = "confidence", level = 0.9)
lm(formula = Y ~ X, dados) %>%
predict(newdata = data.frame(X = 28), interval = "confidence", level = 0.95)
lm(formula = Z ~ X, dados) %>%
predict(newdata = data.frame(X = 28), interval = "predict", level = 0.95)
lm(formula = Y ~ X, dados) %>%
predict(newdata = data.frame(X = 28), interval = "predict", level = 0.95)
anova(lm(formula = Y ~ Z, data = dados))
?percent()
?label_percent()
label_percent(0.05)
scales::label_percent(0.05)
tabela = anova(lm(formula = Y ~ Z, data = dados))
tabela
tabela$`Sum Sq`[1]/sum(tabela$`Sum Sq`)
cat(
"Região de aceitação:",
qt(p = c(0.025, 0.975), df = 20-2)
)
pt(1.65, df = 20-2)
pt(1.65, df = 20-2).
q()
setwd("~/GitHub/EstatisticaBasicaR")
?confint
?predict
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readxl)
library(combinat)
library(kableExtra)
dados = read_excel("exemplo-15.1.xlsx")
View(dados)
modelo = lm(formula = Y ~X, dados)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 16)
modelo = lm(formula = Y ~ Z, dados)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 16)
modelo = lm(formula = Y ~ Z, dados)
modelo = lm(formula = Y ~ X, dados)
plot(modelo, which = c(1:4), pch = 16)
par(mfrow = c(2,2))
modelo = lm(formula = Y ~ Z, dados)
par(mfrow = c(2,2))
plot(modelo, which = c(1:4), pch = 16)
q()
